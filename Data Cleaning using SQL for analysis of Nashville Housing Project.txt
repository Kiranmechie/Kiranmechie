select*
from NashvilleHousing

--Date Formation

select SaleDate
from NashvilleHousing

--Populate Poperty Address in the blank area

select PropertyAddress
from NashvilleHousing
where PropertyAddress is null

select a.ParcelID,a.PropertyAddress, b.ParcelID,b.PropertyAddress, ISNULL(a.PropertyAddress,b.PropertyAddress)
from NashvilleHousing a
join NashvilleHousing b
on a.ParcelID = b.ParcelID
and a.UniqueID <> b.UniqueID
where a.PropertyAddress is null

update a
set PropertyAddress=ISNULL(a.PropertyAddress,b.PropertyAddress)
from NashvilleHousing a
join NashvilleHousing b
on a.ParcelID = b.ParcelID
and a.UniqueID <> b.UniqueID
where a.PropertyAddress is null

--Breaking the address into address, city, state


select PropertyAddress
from NashvilleHousing

SELECT
SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1 ) as Address
, SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) + 1 , LEN(PropertyAddress)) as Address
From NashvilleHousing

ALTER TABLE NashvilleHousing
Add PropertySplitAddress Nvarchar(255);

Update NashvilleHousing
SET PropertySplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1 )


ALTER TABLE NashvilleHousing
Add PropertySplitCity Nvarchar(255);

Update NashvilleHousing
SET PropertySplitCity = SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) + 1 , LEN(PropertyAddress))

select *
from NashvilleHousing

Select OwnerAddress
From NashvilleHousing

SELECT
SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1 ) as Address
, SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) + 1 , LEN(PropertyAddress)) as Address
From NashvilleHousing

Select
PARSENAME(REPLACE(OwnerAddress, ',', '.') , 3)
,PARSENAME(REPLACE(OwnerAddress, ',', '.') , 2)
,PARSENAME(REPLACE(OwnerAddress, ',', '.') , 1)
From NashvilleHousing

ALTER TABLE NashvilleHousing
Add OwnerSplitAddress Nvarchar(255);

Update NashvilleHousing
SET OwnerSplitAddress = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 3)


ALTER TABLE NashvilleHousing
Add OwnerSplitCity Nvarchar(255);

Update NashvilleHousing
SET OwnerSplitCity = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 2)



ALTER TABLE NashvilleHousing
Add OwnerSplitState Nvarchar(255);

Update NashvilleHousing
SET OwnerSplitState = PARSENAME(REPLACE(OwnerAddress, ',', '.') , 1)

select *
from NashvilleHousing

--Update SoldAsVacent data from 'Y' and 'N' to 'Yes' and 'No'

Select Distinct(SoldAsVacant), Count(SoldAsVacant)
From NashvilleHousing
Group by SoldAsVacant
order by 2

Select SoldAsVacant,
CASE When SoldAsVacant = 'Y' THEN 'Yes'
	   When SoldAsVacant = 'N' THEN 'No'
	   ELSE SoldAsVacant
	   END
From NashvilleHousing

update NashvilleHousing
set SoldAsVacant=CASE When SoldAsVacant = 'Y' THEN 'Yes'
	                  When SoldAsVacant = 'N' THEN 'No'
	                  ELSE SoldAsVacant
	                  END

--Remove Duplicate data


Select *,
	ROW_NUMBER() OVER (
	PARTITION BY ParcelID,
				 PropertyAddress,
				 LegalReference
				 ORDER BY
					UniqueID
					) row_num

From NashvilleHousing
order by row_num

WITH RowNumCTE AS(
Select *,
	ROW_NUMBER() OVER (
	PARTITION BY ParcelID,
				 PropertyAddress,
				 LegalReference
				 ORDER BY
					UniqueID
					) row_num

From NashvilleHousing
)
Delete
From RowNumCTE
Where row_num > 1


--Delete Unused Column
select *
from NashvilleHousing

ALTER TABLE NashvilleHousing
DROP COLUMN PropertyAddress, OwnerAddress, TaxDistrict 

--Update Null Value in OwnerSplitAddress, OwnerSplitCity, OwnerSplitState


select PropertySplitAddress , PropertySplitCity, OwnerSplitAddress, OwnerSplitCity, OwnerSplitState
from NashvilleHousing

select PropertySplitAddress , OwnerSplitAddress
from NashvilleHousing
where OwnerSplitAddress is null


Update NashvilleHousing
Set OwnerSplitAddress = PropertySplitAddress
where OwnerSplitAddress is null

select  PropertySplitCity,  OwnerSplitCity
from NashvilleHousing
--where OwnerSplitCity is null

Update NashvilleHousing
Set OwnerSplitCity = PropertySplitCity
where OwnerSplitCity is null

select PropertySplitAddress , PropertySplitCity, OwnerSplitAddress, OwnerSplitCity, OwnerSplitState
from NashvilleHousing


select OwnerSplitCity, OwnerSplitState
from NashvilleHousing
where OwnerSplitState is null

Select Distinct(OwnerSplitCity),Count(OwnerSplitCity)--,Distinct(OwnerSplitCity), --, Count(OwnerSplitState)
From NashvilleHousing
Group by OwnerSplitCity--,OwnerSplitCity
--order by 2

Select Distinct(OwnerSplitState), Count(OwnerSplitState)
From NashvilleHousing
Group by OwnerSplitState

Update NashvilleHousing
Set OwnerSplitState = 'TN'
where OwnerSplitState = ' TN'


select*
from NashvilleHousing